<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Application Craft</title>
  <subtitle>A Blog written by Application Craft - the Visual IDE people</subtitle>
  <id>http://www.applicationcraft.com/blog</id>
  <link href="http://www.applicationcraft.com/blog"/>
  <link href="http://www.applicationcraft.com/blog/feed.xml" rel="self"/>
  <updated>2013-01-23T00:00:00Z</updated>
  <author>
    <name>Application Craft</name>
  </author>
  <entry>
    <title>AC Mobile Build for Windows Phone</title>
    <link rel="alternate" href="/blog/2013/01/windows-phone-mobile-build-support/"/>
    <id>/blog/2013/01/windows-phone-mobile-build-support/</id>
    <published>2013-01-23T00:00:00Z</published>
    <updated>2013-01-23T00:00:00Z</updated>
    <author>
      <name>Article Author</name>
    </author>
    <summary type="html">&lt;p&gt;Hot on the heels of our new console reveal &lt;a href="/blog/2013/01/all-new-console/"&gt;yesterday&lt;/a&gt; comes an amazing new features of &lt;a href="/product/phonegap-mobile-build/"&gt;AC Mobile Build&lt;/a&gt;. We are proud to announce official support for Windows Phone.&lt;/p&gt;

&lt;p&gt;&lt;img title="Mobile Build support for Windows Phone" alt="Windows Phone" src="/img/blog/winphone-37269549.png" /&gt;&lt;/p&gt;
</summary>
    <content type="html">&lt;p&gt;Hot on the heels of our new console reveal &lt;a href="/blog/2013/01/all-new-console/"&gt;yesterday&lt;/a&gt; comes an amazing new features of &lt;a href="/product/phonegap-mobile-build/"&gt;AC Mobile Build&lt;/a&gt;. We are proud to announce official support for Windows Phone.&lt;/p&gt;

&lt;p&gt;&lt;img title="Mobile Build support for Windows Phone" alt="Windows Phone" src="/img/blog/winphone-37269549.png" /&gt;&lt;/p&gt;

&lt;p&gt;This means that with a click of a button, we will compile your AC and HTML5 apps for the Windows Phone platform. This is added at no additional cost, and sits alongside our current support for iOS and Android.&lt;/p&gt;

&lt;p&gt;&lt;a href="/product/phonegap-mobile-build/"&gt;AC Mobile Build&lt;/a&gt; is based on the open source PhoneGap/Cordova project, and is designed to allow you to build apps using HTML, CSS and Javascript, while taking advantage of device specific functionality. You can then deploy them to any iOS, Android and now Windows Phone devices, and subsequently to their respective App Stores.&lt;/p&gt;

&lt;p&gt;And AC Mobile Build is not only for AC apps. Just upload any web app, and we will do the rest.&lt;/p&gt;

&lt;p&gt;We hope you enjoy this new addition. And if you do, you&amp;#39;re gonna love what else we&amp;#39;ve been working on.&lt;/p&gt;

&lt;p&gt;Watch this space ;)&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Introducing the All New Console</title>
    <link rel="alternate" href="/blog/2013/01/all-new-console/"/>
    <id>/blog/2013/01/all-new-console/</id>
    <published>2013-01-22T00:00:00Z</published>
    <updated>2013-01-22T00:00:00Z</updated>
    <author>
      <name>Article Author</name>
    </author>
    <summary type="html">&lt;p&gt;After several weeks of testing and QA, today we released an all new look and feel for the AC Console, which brings it bang up to date with the new site and branding that we launched late last year.&lt;/p&gt;

&lt;p&gt;&lt;img title="The all new AC Console" alt="New Console" src="/img/blog/newconsole-6b348d48.png" /&gt;&lt;/p&gt;
</summary>
    <content type="html">&lt;p&gt;After several weeks of testing and QA, today we released an all new look and feel for the AC Console, which brings it bang up to date with the new site and branding that we launched late last year.&lt;/p&gt;

&lt;p&gt;&lt;img title="The all new AC Console" alt="New Console" src="/img/blog/newconsole-6b348d48.png" /&gt;&lt;/p&gt;

&lt;p&gt;It also includes a much improved UI for dialogs, and a little taster of things to come, and the Quick Start dialog has been updated to help you get started even faster.&lt;/p&gt;

&lt;p&gt;&lt;img title="The new Quick Start dialog in the new AC Console" alt="New Quick Start Dialog" src="/img/blog/newconsole2-79151d59.png" /&gt;&lt;/p&gt;

&lt;p&gt;Sign in to your account to see what&amp;#39;s new and to play with the new AC Console.&lt;/p&gt;

&lt;p&gt;&lt;img title="The new Sign In page in the new AC Console" alt="New Sign In" src="/img/blog/newconsole3-f5ed8219.png" /&gt;&lt;/p&gt;

&lt;p&gt;We&amp;#39;d love to know what you think, so please leave your comments below.&lt;/p&gt;

&lt;p&gt;Enjoy!&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Quick and Easy Database CRUD with Parse</title>
    <link rel="alternate" href="/blog/2013/01/quick-and-easy-database-crud-with-parse/"/>
    <id>/blog/2013/01/quick-and-easy-database-crud-with-parse/</id>
    <published>2013-01-14T00:00:00Z</published>
    <updated>2013-01-14T00:00:00Z</updated>
    <author>
      <name>Article Author</name>
    </author>
    <summary type="html">&lt;p&gt;Over Christmas we introduced the easiest yet way for you to to create, read, update and delete data in any AC application. We partnered up with &lt;a href="http://parse.com"&gt;Parse&lt;/a&gt; to provide an extremely low barrier to entry data backend using their &lt;a href="https://parse.com/docs/rest#objects"&gt;Objects API&lt;/a&gt;. Making the whole &lt;a href="http://en.wikipedia.org/wiki/Create,_read,_update_and_delete"&gt;CRUD&lt;/a&gt; process amazingly easy to implement into any app.&lt;/p&gt;
</summary>
    <content type="html">&lt;p&gt;Over Christmas we introduced the easiest yet way for you to to create, read, update and delete data in any AC application. We partnered up with &lt;a href="http://parse.com"&gt;Parse&lt;/a&gt; to provide an extremely low barrier to entry data backend using their &lt;a href="https://parse.com/docs/rest#objects"&gt;Objects API&lt;/a&gt;. Making the whole &lt;a href="http://en.wikipedia.org/wiki/Create,_read,_update_and_delete"&gt;CRUD&lt;/a&gt; process amazingly easy to implement into any app.&lt;/p&gt;

&lt;p&gt;I won&amp;#39;t go into too much detail here as the &lt;a href="http://www.applicationcraft.com/developers/documentation/product-guide/advanced-features/parse/objects/"&gt;documentation&lt;/a&gt; already does that well. So instead I will prove to you you just how easy it is to use.&lt;/p&gt;

&lt;h2 id="toc_0"&gt;Available Methods&lt;/h2&gt;

&lt;p&gt;We have created a new &lt;code&gt;parse.objects&lt;/code&gt; class which your app has access to. This new class contains 5 methods which cover everything you need to create, read, update and delete data, as well as a powerful querying API:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="/developers/documentation/scripting-apis/server-side-api/parse-object/objectcreate"&gt;parse.objects.create()&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="/developers/documentation/scripting-apis/server-side-api/parse-object/objectread"&gt;parse.objects.read()&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="/developers/documentation/scripting-apis/server-side-api/parse-object/objectupdate"&gt;parse.objects.update()&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="/developers/documentation/scripting-apis/server-side-api/parse-object/objectdelete"&gt;parse.objects.delete()&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="/developers/documentation/scripting-apis/server-side-api/parse-object/objectquery"&gt;parse.objects.query()&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id="toc_1"&gt;Example Scenario&lt;/h2&gt;

&lt;p&gt;I want to keep a record of my book collection, including details of each book. So lets start by creating an object (or record) for each book in my collection (I only have one right now):&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;parse.objects.create(&amp;#39;books&amp;#39;, {
  title: &amp;#39;The Lord of the Rings&amp;#39;,
  author: &amp;#39;JRR Tolkien&amp;#39;
});
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This will return a Javascript object containing the &lt;code&gt;objectId&lt;/code&gt; and the &lt;code&gt;createdAt&lt;/code&gt; date.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{
  objectId: &amp;quot;DM5XhFTiPR&amp;quot;,
  createdAt: &amp;quot;2013-01-14T11:41:24.174Z&amp;quot;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;I forgot to add the publication date, so let&amp;#39;s update my record:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;parse.objects.update(&amp;#39;books&amp;#39;, &amp;#39;DM5XhFTiPR&amp;#39;, {
  publishedAt: &amp;quot;1954-07-21T00:00:00.000Z&amp;quot;
});
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Let&amp;#39;s take a look at our updated object using the &lt;code&gt;read&lt;/code&gt; method:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;parse.objects.read(&amp;#39;books&amp;#39;, &amp;#39;DM5XhFTiPR&amp;#39;);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Our object now looks like this:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{
  title: &amp;#39;The Lord of the Rings&amp;#39;,
  author: &amp;#39;JRR Tolkien&amp;#39;,
  publishedAt: &amp;#39;1954-07-21T00:00:00.000Z&amp;#39;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;It turns out that my wife just threw away my book, so I now need to delete this object:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;parse.objects.delete(&amp;#39;books&amp;#39;, &amp;#39;DM5XhFTiPR&amp;#39;);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;But being a good wife that she is, she bought me a shiny new replacement, along with a few others for me to read. So I created a new record for each of my new books.&lt;/p&gt;

&lt;p&gt;I now have quite a few books in collection, but want to find only those written by JRR Tolkien:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;parse.objects.query(&amp;#39;books&amp;#39;, {
  where: {
    author: &amp;#39;JRR Tolkien&amp;#39;
  }
});
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The above will return me a &lt;code&gt;results&lt;/code&gt; array, containing all objects which have an author of &amp;#39;JRR Tolkien&amp;#39;.&lt;/p&gt;

&lt;p&gt;Those are the basics, and there is of course a lot more that you can do, including some pretty advanced querying. But you should be able to see from the above how quick and easy it is to use the new Parse powered database support in Application Craft.&lt;/p&gt;

&lt;p&gt;&lt;a href="http://www.applicationcraft.com/developers/documentation/product-guide/advanced-features/parse/"&gt;Check out the docs&lt;/a&gt; for more, and leave your comments below.&lt;/p&gt;

&lt;p&gt;Enjoy!&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Push Notification app in minutes</title>
    <link rel="alternate" href="/blog/2013/01/push-notifications/"/>
    <id>/blog/2013/01/push-notifications/</id>
    <published>2013-01-10T00:00:00Z</published>
    <updated>2013-01-10T00:00:00Z</updated>
    <author>
      <name>Article Author</name>
    </author>
    <summary type="html">&lt;p&gt;We have just completed full support for Push Notifications in Application Craft, and have teamed up with &lt;a href="http://www.xtify.com"&gt;Xtify&lt;/a&gt;, who provide the underlying push technology. You will need to create an Account with them, although this is free (you start paying Xtify once you reach large volumes).&lt;/p&gt;
</summary>
    <content type="html">&lt;p&gt;We have just completed full support for Push Notifications in Application Craft, and have teamed up with &lt;a href="http://www.xtify.com"&gt;Xtify&lt;/a&gt;, who provide the underlying push technology. You will need to create an Account with them, although this is free (you start paying Xtify once you reach large volumes).&lt;/p&gt;

&lt;p&gt;We have also added a new drop-in API that makes it ridiculously easy to add support for push notifications in your app.&lt;/p&gt;

&lt;p&gt;How easy? Well this is all it takes ...&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;You create an App in Application Craft&lt;/li&gt;
&lt;li&gt;You create an App in Xtify for &lt;a href="/developers/documentation/ac-mobile-build-phonegap/ac-mobile-build/ac-build-plugins/xtify-push-notifications/configuration/iOS/xtify-ios-portal-setup/"&gt;iOS&lt;/a&gt; or for &lt;a href="/developers/documentation/ac-mobile-build-phonegap/ac-mobile-build/ac-build-plugins/xtify-push-notifications/configuration/android/xtify-android-portal-setup/"&gt;Android&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;You generate your iOS / Android keys&lt;/li&gt;
&lt;li&gt;&lt;p&gt;You add the following code to your App&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;function notificationReceived() {
    // Your own, optional callback function
    // Called when your App receives the notification
}

function handler_application_onAppStarted(){
    xtify.applicationKeyiOS = &amp;quot;12345678-9754-4ffc-be65-ecd00a482269&amp;quot;;
    xtify.applicationKeyAndroid = &amp;quot;abcdefg-9754-4ffc-be65-ecd00a482269&amp;quot;;
    xtify.startedCallback = notificationReceived;
    xtify.init();
}
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;You send out the Notification from &lt;a href="/developers/documentation/ac-mobile-build-phonegap/ac-mobile-build/ac-build-plugins/xtify-push-notifications/xtify-push-message/"&gt;Xtify&lt;/a&gt;, or from your own App using &lt;a href="/developers/documentation/ac-mobile-build-phonegap/ac-mobile-build/ac-build-plugins/xtify-push-notifications/apis/xtify-notification-api/"&gt;our API&lt;/a&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id="toc_0"&gt;The AC Xtify API&lt;/h2&gt;

&lt;p&gt;We have added our own API that sits in front of the Xtify system and makes life really very easy for you. However, you can always access the Xtify API directly if required.&lt;/p&gt;

&lt;p&gt;The main features of this are&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;ease-of-use is at the top of the list; less experienced developers may struggle with Xtify&amp;#39;s own API and so we have simplified things for all common operations&lt;/li&gt;
&lt;li&gt;allows you to operate in test mode, so you can test lots of things from your desktop rather than a mobile device&lt;/li&gt;
&lt;li&gt;a single call &amp;#39;xtify.location.update()&amp;#39; that automatically tells the Xtify system where the user is located. You can then set up auto notifications based on a user&amp;#39;s location.&lt;/li&gt;
&lt;li&gt;a cool &amp;#39;Tag API&amp;#39; that lets your App tag users with any information you require, typically information gathered from the App itself. You can then send out notifications only to those users with certain tags.&lt;/li&gt;
&lt;/ul&gt;
</content>
  </entry>
  <entry>
    <title>GjiGan - Your City at your Fingertips</title>
    <link rel="alternate" href="/blog/2013/01/gjigan/"/>
    <id>/blog/2013/01/gjigan/</id>
    <published>2013-01-09T00:00:00Z</published>
    <updated>2013-01-09T00:00:00Z</updated>
    <author>
      <name>Article Author</name>
    </author>
    <summary type="html">&lt;p&gt;Sylvain Danigo has come up with an app using Application Craft that will transform the way citizens can interact with the Canadian town of Blainville. The mobile app, named &lt;a href="http://www.gjigan.com/"&gt;GjiGan&lt;/a&gt; (pronounced Jee-Gan), provides smartphone users both commercial and municipal information in real time. We had a chance to speak with Sylvain about the creation of GjiGan&lt;/p&gt;
</summary>
    <content type="html">&lt;p&gt;Sylvain Danigo has come up with an app using Application Craft that will transform the way citizens can interact with the Canadian town of Blainville. The mobile app, named &lt;a href="http://www.gjigan.com/"&gt;GjiGan&lt;/a&gt; (pronounced Jee-Gan), provides smartphone users both commercial and municipal information in real time. We had a chance to speak with Sylvain about the creation of GjiGan&lt;/p&gt;

&lt;h3 id="toc_0"&gt;Tell us more about GjiGan&lt;/h3&gt;

&lt;p&gt;GjiGan is more than just a simple directory. The application presents news in real time, whether it’s municipal information, promotions, offers from local merchants, and even job listings. The application can be customized according to the type of information selected and your interests.&lt;/p&gt;

&lt;p&gt;The app extracts news from the town’s official website so only the current and official news appears.&lt;/p&gt;

&lt;h3 id="toc_1"&gt;Sounds great! What has the user response been like?&lt;/h3&gt;

&lt;p&gt;There are over 600 users (the app was launched last month). Citizens like it because it’s a free app and gives them the town’s current information and includes interesting features, such as interactive maps. Businesses like it because it gives them a chance to promote and advertise on the application.&lt;/p&gt;

&lt;h3 id="toc_2"&gt;Why did you choose Application Craft?&lt;/h3&gt;

&lt;p&gt;I wanted to make mobile apps a year ago and looked at various platforms. The first thing that pulled me towards Application Craft was the fact that it is cloud-based. It’s easy to build screens and works immediately on mobile devices.&lt;/p&gt;

&lt;h3 id="toc_3"&gt;What was your favourite aspect of Application Craft?&lt;/h3&gt;

&lt;p&gt;I really enjoyed the drag and drop. I found it easy to quickly build what I wanted. Had I chosen a different platform it would have taken me twice the amount of time, definitely.&lt;/p&gt;

&lt;p&gt;I found the widgets easy to program, enjoyed the many functionalities Application Craft has to offer and think Application Craft is very good value for what it offers and what I’ve been able to do with it.&lt;/p&gt;

&lt;p&gt;To make things even better, I found the support great! The forum was a good place to ask questions and I received answers very quickly, either by the Application Craft staff or from other people on the forum.&lt;/p&gt;

&lt;h3 id="toc_4"&gt;Any future Application Craft plans?&lt;/h3&gt;

&lt;p&gt;Oh yes, I have another project lined up and have many customers asking for mobile development.&lt;/p&gt;

&lt;h3 id="toc_5"&gt;One last question... How did you come up with GjiGan’s name?&lt;/h3&gt;

&lt;p&gt;“Gjigan” means village in the Micmac* language.&lt;/p&gt;

&lt;p&gt;Full case study can be found &lt;a href="http://www.applicationcraft.com/pdf/testimonials/AC%20Case%20Study%20GjiGan.pdf"&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;*Here’s a little Canadian history lesson for you: Micmacs are a First Nations people, located in Canada’s Maritime Provinces and the Gaspé Peninsula of Quebec, as well as some parts of New England, USA. “Micmac” both refers to the people themselves and the language they speak. The Micmac were among the first peoples to be affected by European activities in the New World and underwent early depopulation and sociocultural disruption. Quick lesson over!&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>CSS Styling in Application Craft</title>
    <link rel="alternate" href="/blog/2013/01/css-styling/"/>
    <id>/blog/2013/01/css-styling/</id>
    <published>2013-01-07T00:00:00Z</published>
    <updated>2013-01-07T00:00:00Z</updated>
    <author>
      <name>Article Author</name>
    </author>
    <summary type="html">&lt;h2 id="toc_0"&gt;Introducing Manos Koufakis&lt;/h2&gt;

&lt;p&gt;Manos has been an Application Craft user since we were in beta last year. His first app made it to #2 in the Apple App Store, beating eBay, Skype and other household names.&lt;/p&gt;

&lt;p&gt;Manos has produced a great new app (currently pre-release) that makes heavy use of CSS Styling and we thought it would be great to share his experiences with you. Manos has provided ...&lt;/p&gt;
</summary>
    <content type="html">&lt;h2 id="toc_0"&gt;Introducing Manos Koufakis&lt;/h2&gt;

&lt;p&gt;Manos has been an Application Craft user since we were in beta last year. His first app made it to #2 in the Apple App Store, beating eBay, Skype and other household names.&lt;/p&gt;

&lt;p&gt;Manos has produced a great new app (currently pre-release) that makes heavy use of CSS Styling and we thought it would be great to share his experiences with you. Manos has provided ...&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;the &lt;a href="http://acft.ws/nsnd"&gt;working app&lt;/a&gt; that you can run in your desktop browser&lt;/li&gt;
&lt;li&gt;a &lt;a href="http://www.youtube.com/v/9bJSG-ETZvs?autoplay=1&amp;hd=1&amp;fs=1&amp;showsearch=0&amp;rel=0&amp;" class="fancybox fancybox.iframe"&gt; Video Tutorial&lt;/a&gt; of how he did this&lt;/li&gt;
&lt;li&gt;a list of useful resources (below)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id="toc_1"&gt;Style like a pro with Application Craft&lt;/h2&gt;

&lt;p&gt;Ever since I started using Application Craft (nearly 1 year ago), I was really excited with the Widget drag and drop environment that allowed for really speedy development without having to care about containers, specifying complex div structure etc. So I made my first app with AC, named Βρες Δώρο (Find Gift), that does what its title indicates - it helps you find a gift for any circumstance.&lt;/p&gt;

&lt;p&gt;Without using ANY custom CSS style, relying only on the provided AC themes and widgets I completed my app and it rocketed to the #2 position in the App store and stayed there for nearly 1 week! I was really blown away! The application received triumphant comments, but what  started bothering me, was that there were a few comments referring to poor design.&lt;/p&gt;

&lt;p&gt;In the meanwhile, I started developing my second app called “Find the Movie”, which is a movie quiz game where the user is called to guess a film by looking at a screenshot. For that app I co-operated with a graphic arts company in order to have cool icons and design in my app and avoid any negative criticism. When the art project completed, I was provided with a set of .psd files and NO CSS. That was a nightmare for me!&lt;/p&gt;

&lt;p&gt;How the hell can I implement all those fancy gradients, cool button icons etc. into AC? AC is a widget based platform and there is NO theme roller. Plus, I really hate messing with CSS! As much as I like programming, my head aches when I have to deal with CSS styling.&lt;/p&gt;

&lt;p&gt;After the initial panic, I searched a bit on the AC forum and read a bit about the &lt;a href="https://getsatisfaction.com/application_craft/topics/application_craft_custom_css_classes_how_do_i_reference_these_with_a_url"&gt;Custom CSS Properties&lt;/a&gt; that you can see as an option to every widget you see.&lt;br&gt;
That was the key to paradise!  I started writing my own CSS styles and in a short period of time, I transformed a poorly looking app to a really nice looking quiz game. You can see the result here and play around with the pre-release demo:&lt;br&gt;
&lt;a href="http://acft.ws/nsnd"&gt;http://acft.ws/nsnd&lt;/a&gt;&lt;/p&gt;

&lt;h2 id="toc_2"&gt;OK, so much for the talk, now how do you do it?&lt;/h2&gt;

&lt;p&gt;In order to transform your application and implement your custom styles, you will need 4 tools:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt; &lt;a href="http://www.w3schools.com/"&gt;http://www.w3schools.com/&lt;/a&gt; - even if you think you’re a CSS expert, it’s nearly impossible to remember by heart all these great features of CSS and CSS3, so you can use that website as a reference in case you forget something&lt;/li&gt;
&lt;li&gt; Chrome or Firefox debugger (or any debugger that you like) – myself I’ve been using mostly the &lt;a href="http://developer.chrome.com/extensions/debugger.html"&gt;Chrome debugger&lt;/a&gt;, ‘cause I like Chrome best. This is the most useful tool in order to know what to do. So every time you want to style a certain page, you open the page, then open the debugger and with the use of the Element Inspector (that little magnifying glass at the bottom) you can click any element on your page and you are provided with its  CSS style features.&lt;/li&gt;
&lt;li&gt; An image editing program like Photoshop&lt;/li&gt;
&lt;li&gt; &lt;a href="http://csslint.net/"&gt;CSS Lint&lt;/a&gt; – never ever, ever, ever try to implement any CSS without first validating it. CSS Lint provides a really handy CSS debugger where you can copy+paste your CSS code and check for any errors. A single CSS error may be the reason why your CSS style is completely messed up. I use CSS Lint for validation and Chrome’s debugger for element inspection and in case you wonder why I use a second debugger for CSS is because I find CSS Lint more handy for CSS validation purposes  only.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;So, with all these in mind / handy, you’re ready for the next stage...&lt;/p&gt;

&lt;h2 id="toc_3"&gt;How to mess with AC’s Widgets and add your own custom styling?&lt;/h2&gt;

&lt;p&gt;Instead of writing a general strategy, it is best to proceed with a &amp;quot;per case&amp;quot; scenario. &lt;a href="http://www.youtube.com/v/9bJSG-ETZvs?autoplay=1&amp;hd=1&amp;fs=1&amp;showsearch=0&amp;rel=0&amp;" class="fancybox fancybox.iframe"&gt; So I made a video&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;(please bear with the hybrid language that I speak on the tutorial. It is known as Greeklish ;)&lt;/p&gt;

&lt;p&gt;I will be adding more video tutorials when I have more time.&lt;/p&gt;
</content>
  </entry>
</feed>
